* <package-name> --- R package
** README :noexport:
 - Add metadata about the package in 'DESCRIPTION' subsection.
 - Edit exports in subsection 'NAMESPACE', add necessary imports.
 - If you have compiled code, add a useDynLib() directive in the
   'NAMESPACE' subsection.
 - Add links to any C/C++/Fortran code in 'src' subsection.
 - Add links to any .rda data files in 'data subsection.
 - Add first-level entries for each function. 
 - Write the R code in the 'R' subsections.
 - Add metadata in the 'meta' subsection's property lists.
 - Add documentation in the 'man' subsections.
 - Call `M-x org-export-dispatch' and export to backend rpkg. 
 - After export, run R CMD build to build the package tarball.
 - Run R CMD check to check the package tarball.

Read "Writing R Extensions" for more information.

** DESCRIPTION
   :PROPERTIES:
   :Package:  <package-name>
   :Type:     Package
   :Title:    What the package does (short line)
   :Version:  1.0
   :Date:     2014-05-31
   :Author:   Who wrote it
   :Maintainer: Who to complain to <yourfault@somewhere.net>
   :License:  What license is it under?
   :END:

*** Description
More about what it does (maybe more than one line)

** NAMESPACE

# - export :: obj1
# - export :: obj2
# - useDynLib :: dll1
 - exportPattern :: "^[[[[:alpha:]]]]+" 

** src
 - [[file:bin/fortran-src.f90][fortranSrc.f90]]

** data
 - [[file:testfiles/ardec/ArDec/data/tempEng.rda][myData.rda]]

* fun1 :R:
** meta
  :PROPERTIES:
  :title:    Time series autoregressive decomposition
  :name:     ardec
  :ppName:   ArDec
  :alias:    ardec
  :author:   S. M. Barbosa
  :keywords:  ts
  :END:

** man
*** Description

Decomposition of a time series into latent subseries from a fitted
autoregressive model

*** Usage

#+begin_example
 ardec(x, coef, ...)
#+end_example

*** Arguments

- x ::  time series
- coef :: autoregressive parameters of AR(p) modebl
- ... :: additional arguments for specific methods

*** Details

If an observed time series can be adequately described by an (eventually high
order) autoregressive AR(p) process, a constructive result (West, 1997) yields
a time series decomposition in terms of latent components following either
AR(1) or AR(2) processes depending on the eigenvalues of the state evolution
matrix.

Complex eigenvalues r exp(iw) correspond to pseudo-periodic oscillations as a
damped sine wave with fixed period (2pi/w) and damping factor r. Real
eigenvalues correspond to a first order autoregressive process with parameter
r.

*** Value

A list with components: 

- period :: periods of latent components
- modulus :: damping factors of latent components
- comps :: matrix of latent components

*** References

#+begin_latex
  \cite{west1997time}
  \linebreak{}
  \cite{west1997bayesian}
#+end_latex

*** Examples

#+begin_src R
data(tempEng)
coef=ardec.lm(tempEng)$coefficients
#+end_src

warning: running the next command can be time comsuming!
#+begin_src R
decomposition=ardec(tempEng,coef)
#+end_src

** R

#+begin_src R
ardec <- function(x,coef, ...) {

    dat=x-mean(x)
    p=length(coef)
    ndat=length(x)

    G=matrix(nrow=p,ncol=p)

    G[1,]=coef
    G[seq(2,p),seq(1,p-1)]=diag(1,(p-1))
    G[seq(2,p),p]=0

    modulus=Mod(eigen(G)[[1]])
    lambda=2*pi/Arg(eigen(G)[[1]])

    eigenvalues=eigen(G)
    A=diag(eigenvalues[[1]])
    E=eigenvalues[[2]]
    B=solve(E)
    F=rep(NA,p)
    F[1]=1
    F[seq(2,p)]=0
    a=t(E) %*% F
    d=diag(as.vector(a))
    H=d %*% B

    Z=matrix(nrow=p,ncol=ndat)
    Z[1,]=dat
    for (i in seq(1,p-1)){
        Z[i+1,]=as.vector(filter(dat,c(rep(0,i),1), method="convolution",
        sides=1))}

    g=matrix(nrow=p,ncol=ndat)
    for (j in seq(1,p)){
        for (t in seq(1,ndat)){
            g[j,t]=H[j, ] %*% Z[,t] }}


    return(list(period=lambda,modulus=modulus,comps=g))
}

#+end_src

** data

* data1 :RDA:
** meta
  :PROPERTIES:
  :title:    Time series of monthly temperature values
  :name:     tempEng
  :alias:    tempEng
  :keyword:  datasets
  :END:

** man
*** Description

  Monthly temperature in Central England from 1723-1970

*** Usage

#+begin_example
  data(tempEng)
#+end_example

*** Format

 Time-Series [1:2976] from 1723 to 1971

*** Examples

#+begin_src R
  data(tempEng)
  ## maybe str(tempEng) ; plot(tempEng) ...
#+end_src

** R

* Bibliography

\bibliographystyle{apalike}
\bibliography{ardec}

* inst
** <package-name> Tutorial
  [2014-05-31 Sa 23:27]
  :PROPERTIES:
  :export_backends: html ascii latex
  :subdir: docs
  :END:
# *** Introduction
# Text
# *** Getting started
# Text
# *** Data
# **** Load the example data
# Text
# **** Plot the data
# Text
# *** Some exploratory analysis
# Text
# *** More analyses
# Text
# *** References
# Text
